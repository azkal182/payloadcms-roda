name: CI/CD payloadcms-roda

on:
  push:
    branches:
      - sandbox

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print current branch
        run: echo ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build Next.js application
        env:
          DATABASE_URL: 'postgres://azkal:azkal@139.59.227.23:5432/payloadcms-roda'
          PAYLOAD_SECRET: '1dbb4f2c4449f60a91e95202'
          NEXT_PUBLIC_SERVER_URL: 'https://roda.azkal.my.id'
          CRON_SECRET: 'sasfhjsd-sdfsf879jhkjLNKNKJKK'
        run: |
          echo "DATABASE_URL=${DATABASE_URL}"
          echo "PAYLOAD_SECRET=${PAYLOAD_SECRET}"
          echo "NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}"
          echo "CRON_SECRET=${CRON_SECRET}"
          bun run build

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan 139.59.227.23 >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh -tt azkal@139.59.227.23 << 'EOF'
              if [ ! -d "/home/azkal/project/payloadcms-roda" ]; then
                echo "Directory /home/azkal/project/payloadcms-roda does not exist. Cloning project..."
                git clone https://github.com/azkal182/payloadcms-roda.git /home/azkal/project/payloadcms-roda
                cd /home/azkal/project/payloadcms-roda
                git checkout sandbox
              else
                echo "Directory /home/azkal/project/payloadcms-roda exists. Pulling latest changes..."
                cd /home/azkal/project/payloadcms-roda
                git checkout sandbox
                git pull origin sandbox
              fi
              exit
          EOF

      - name: Copy build files to VPS
        run: |
          rsync -avz --delete .next/ azkal@139.59.227.23:/home/azkal/project/payloadcms-roda/.next/
          rsync -avz --delete public/ azkal@139.59.227.23:/home/azkal/project/payloadcms-roda/public/
          rsync -avz --delete package.json bun.lockb azkal@139.59.227.23:/home/azkal/project/payloadcms-roda/

      - name: Install Dependencies and Restart App
        run: |
          ssh -tt azkal@139.59.227.23 << 'EOF'
              cd /home/azkal/project/payloadcms-roda
              if pm2 describe payloadcms-roda > /dev/null; then
                pm2 stop payloadcms-roda
                pm2 delete payloadcms-roda
              else
                echo "PM2 application 'payloadcms-roda' not found, skipping stop."
              fi

              bun install --production

              sed -i '/^DATABASE_URL=/d' .env
              echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

              sed -i '/^PAYLOAD_SECRET=/d' .env
              echo "PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}" >> .env

              sed -i '/^NEXT_PUBLIC_SERVER_URL=/d' .env
              echo "NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL }}" >> .env

              sed -i '/^CRON_SECRET=/d' .env
              echo "CRON_SECRET=${{ secrets.CRON_SECRET }}" >> .env

              pm2 start bun --name "payloadcms-roda" -- start -- -p 5000
              exit
          EOF
